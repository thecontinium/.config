{:skip-comments true
 :config-paths  ["nubank/state-flow"
                 "nubank/common-datomic"
                 "marick/midje"]
 :hooks         {:analyze-call {postman.aux.init/defflow                    nubank.state-flow/defflow
                                integration.aux.init/defflow                nubank.state-flow/defflow
                                integration.aux.init/defflow-loopback-false nubank.state-flow/defflow
                                midje.sweet/tabular                         marick.midje/tabular}}
 :lint-as       {midje.checking.checkers.defining/defchecker clojure.core/defn
                 bonafont.logic.flow-edge/def                clojure.core/def
                 bonafont.logic.flow-edge/defedge            clojure.core/def
                 bonafont.logic.flow-config/defflow          clojure.core/def
                 bonafont.logic.flow-config/def              clojure.core/def
                 bonafont.flows.debit-request.edges/def-edge clojure.core/def
                 common-test.postman.helpers.core/defstep    clojure.core/defn
                 common-graphql.lacinia.sweet/defresolver    clojure.core/def
                 common-graphql.lacinia.sweet/defmutation    clojure.core/def
                 common-graphql.lacinia.sweet/definterface   clojure.core/def
                 common-graphql.lacinia.sweet/defobject      clojure.core/def
                 common-graphql.lacinia.sweet/defscalar      clojure.core/def
                 common-graphql.lacinia.sweet/defunion       clojure.core/def
                 common-graphql.lacinia.sweet/definput       clojure.core/def
                 common-graphql.lacinia.sweet/defenum        clojure.core/def
                 clojure.test.check.properties/for-all       clojure.core/let
                 postman.aux.helpers/defaction               clojure.core/defn
                 rewrite-clj.zip/edit->                      clojure.core/->
                 rewrite-clj.zip.subedit/edit->              clojure.core/->
                 rewrite-clj.zip.subedit/subedit->           clojure.core/->}
 :linters {:refer-all {:exclude [midje.sweet
                                 matcher-combinators.test
                                 clojure.test]}}}
